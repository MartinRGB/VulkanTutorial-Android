apply plugin: 'com.android.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def ndkDir = properties.getProperty('ndk.dir')
def valLayerBinDir = "${ndkDir}/sources/third_party/vulkan/src/build-android/jniLibs"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.github.piasy.vulkantutorial"
        minSdkVersion 24
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions -std=c++11 -Werror -Wno-unused-variable"
            }
        }

        ndk.abiFilters = ['armeabi-v7a']
    }

    sourceSets {
        debug {
            ndkDir = 'src/main/cpp'
            jniLibs {
                // Must have ndk-r12 or better which including layer binaries
                srcDirs = ["${valLayerBinDir}"]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug

            externalNativeBuild {
                cmake {
                    cppFlags "-frtti -fexceptions -std=c++11 -Werror -Wno-unused-variable " +
                            "-DUSE_DEBUG_EXTENTIONS -DVK_USE_PLATFORM_ANDROID_KHR"
                }
            }
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:25.3.1'
}
